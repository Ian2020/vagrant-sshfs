
# point local system to git for vagrant-sshfs
    - cd /usr/share/vagrant/gems/gems
    - sudo mv vagrant-sshfs-1.3.3 vsshfs133
    - sudo ln -s /var/b/shared/code/github.com/dustymabe/vagrant-sshfs ./vagrant-sshfs-1.3.3

# Run misc tests
cd /var/b/shared/code/github.com/dustymabe/vagrant-sshfs/test/misc
follow README for running tests

# Make sure to bump version in lib/vagrant-sshfs/version.rb and commit
# DO NOT TAG YET

# Craft a commit message for the tag.
LASTTAG='v1.3.1'
VERSION='1.3.2'
NEWTAG="v${VERSION}"
cat <<EOF > release-notes.txt
This is release ${NEWTAG} of the vagrant-sshfs plugin.

Thanks to the following contributors for patches during this release: 

$(git shortlog --no-merges --pretty=format:"%h %s" -e ${LASTTAG}..HEAD)
EOF

# After crafting message then install git-evtag and sign

git-evtag sign ${NEWTAG}


close and type in password for signing

verify with git-evtag verify ${NEWTAG}
verify with git verify-tag ${NEWTAG}

git push
git push --tags 

# Build with build.sh script (uses buildah)
# We must run it in a buildah unshare session. Otherwise we get the error:
#
#   ++ buildah mount fedora-working-container
#   cannot mount using driver overlay in rootless mode. You need to run it in a `buildah unshare` session
buildah unshare ./build.sh

# Sign the output (This will create a .asc file)
gpg2 --armor --detach-sign ./vagrant-sshfs-${VERSION}.gem

# make tar.gz and zip files
git archive --format=tar.gz ${NEWTAG} > vagrant-sshfs-${VERSION}.tar.gz
gpg2 --armor --detach-sign vagrant-sshfs-${VERSION}.tar.gz
git archive --format=zip ${NEWTAG} > vagrant-sshfs-${VERSION}.zip
gpg2 --armor --detach-sign vagrant-sshfs-${VERSION}.zip


# Update release notes and upload files on github

# push to rubygems with:
gem push ./vagrant-sshfs-${VERSION}.gem
